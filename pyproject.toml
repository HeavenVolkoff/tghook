[tool.poetry]
name = "url-to-video-bot"
version = "0.2.0"
authors = ["VÃ­tor Vasconcellos <vasconcellos.dev@gmail.com>"]
description = "A simple telegram bot that resolves video urls using yt-dlp"

[tool.poetry.dependencies]
python = "^3.9"
"antenna.security" = { git = "https://gitlab.com/VitorVasconcellos/antenna.security.git", branch = "master" }
cryptography = "^35.0.0"
pydantic = "^1.8.2"

[tool.poetry.dev-dependencies]
mypy = "^0.910"
black = "^21.10b0"
isort = "^5.9.3"
datamodel-code-generator = { extras = ["http"], version = "^0.11.14" }
poethepoet = "^0.10.0"

[tool.poe.tasks]
check = { shell = "mypy .; npx pyright" }
format = { shell = "isort . && black ." }
fix-tg-types = { shell = "sed -i 's/\\(\\\\\\)\\{0,1\\}\\\\_/_/g' url_to_video_bot/telegram/types.py" }
grab-tg-types = """datamodel-codegen
  --url https://ark0f.github.io/tg-bot-api/openapi.yml
  --output url_to_video_bot/telegram/types.py
  --validation
  --reuse-model
  --strict-types str
  --strict-types int
  --strict-types bool
  --strict-types float
  --strict-types bytes
  --use-annotated
  --strict-nullable
  --input-file-type openapi
  --snake-case-field
  --wrap-string-literal
  --use-schema-description
  --enum-field-as-literal one
  --target-python-version 3.9
  --enable-faux-immutability
  --use-generic-container-types"""
update-tg-types = ["grab-tg-types", "fix-tg-types", "format"]

[tool.isort]
quiet = true
atomic = true
profile = "black"
src_paths = ["url_to_video_bot", "tests"]
line_length = 99
length_sort = true
virtual_env = ".venv"
combine_star = true
order_by_type = true
dedup_headings = true
skip_gitignore = true
balanced_wrapping = true
combine_as_imports = true
import_heading_stdlib = "Internal"
remove_redundant_aliases = true
import_heading_thirdparty = "External"
import_heading_firstparty = "External"
import_heading_localfolder = "Project"

[tool.black]
color = true
line-length = 99
target-version = ['py38']

[tool.mypy]
pretty = true
strict = true
color_output = true
error_summary = true
ignore_errors = false
python_version = "3.9"
follow_imports = "normal"
strict_optional = true
show_error_codes = true
warn_unreachable = true
python_executable = "./.venv/bin/python"
show_error_context = true
show_column_numbers = true
warn_unused_configs = true
warn_unused_ignores = false # for compatibility with pyright
warn_incomplete_stub = true
disallow_any_unimported = true

[tool.pyright]
venv = ".venv"
include = ["url_to_video_bot", "tests"]
venvPath = "."
pythonVersion = "3.9"
pythonPlatform = "All"
typeCheckingMode = "strict"
reportImportCycles = "warning"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
